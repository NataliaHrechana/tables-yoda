with facebook_google_ads as(
select ad_date, url_parameters, 
coalesce (spend, 0) as spend,
coalesce (impressions, 0) as impressions,
coalesce (clicks, 0) as clicks,
coalesce (leads, 0) as leads,
coalesce (value, 0) as value
from facebook_ads_basic_daily fabd 
union all
select ad_date, url_parameters, 
coalesce (spend, 0) as spend,
coalesce (impressions, 0) as impressions,
coalesce (clicks, 0) as clicks,
coalesce (leads, 0) as leads,
coalesce (value, 0) as value
from google_ads_basic_daily gabd),
stat_by_month as(
select date_trunc('month', ad_date) as ad_month,
case 
	when lower(substring(url_parameters, 'utm_campaign=([\w|\d]+)')) = 'nan' then null
	else lower(substring(url_parameters, 'utm_campaign=([\w|\d]+)'))
end utm_campaign,
	sum (spend) as total_spend,
	sum (impressions) as total_impressions,
	sum(clicks) as total_clicks,
	sum(value) as total_value,
	case 
		when sum(impressions)>0 
		then (sum(clicks)::numeric/sum(impressions)::numeric) 
		else 0
	end CTR,
	case 
		when sum(clicks)>0 
		then (sum(spend)::numeric/sum(clicks)::numeric)
		else 0
	end CPC,
	case 
		when sum(impressions)>0
		then (1000*sum(spend)::numeric/sum(impressions)::numeric)
		else 0
	end CPM,
	case 
		when sum(spend)>0 
		then (sum(value)::numeric/sum(spend)::numeric)
		else 0
	end ROMI
from facebook_google_ads 
where ad_date notnull 
group by ad_month, utm_campaign)
select ad_month, utm_campaign, total_spend, total_impressions, total_clicks, total_value, 
CTR, (CTR/(lag(CTR, 1) over(
partition by utm_campaign
order by ad_month))-1)*100 as diff_ctr, 
CPC, CPM, (CPM/(lag(CPM, 1) over(
partition by utm_campaign
order by ad_month))-1)*100 as diff_cpm,
ROMI, (ROMI/(lag(ROMI, 1) over(
partition by utm_campaign
order by ad_month))-1)*100 as diff_romi
from stat_by_month;
